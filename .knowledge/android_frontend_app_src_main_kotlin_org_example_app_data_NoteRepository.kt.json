{"is_source_file": true, "format": "Kotlin", "description": "This file defines the NoteRepository class, which acts as a repository layer mediating data access between the data access object (DAO) and ViewModels in an Android application. It provides methods to retrieve, save, and delete notes, working with a NoteDao instance.", "external_files": ["NoteDao.kt", "Note.kt"], "external_methods": ["dao.getAll()", "dao.getByCategory(category)", "dao.getById(id)", "dao.insert(note)", "dao.update(note)", "dao.deleteById(id)"], "published": ["NoteRepository"], "classes": [{"name": "NoteRepository", "description": "Repository class facilitating data operations related to notes, including retrieval, insertion, update, and deletion."}], "methods": [{"name": "getAll", "description": "Returns a LiveData list of all notes, sorted by their last updated time."}, {"name": "getByCategory", "description": "Returns a LiveData list of notes filtered by a specific category."}, {"name": "getById", "description": "Suspending function that retrieves a single note by its id, or null if not found."}, {"name": "save", "description": "Suspending function that inserts a new note if its id is 0, or updates an existing note; returns the id of the inserted note."}, {"name": "deleteById", "description": "Suspending function that deletes a note by its id."}], "calls": ["dao.getAll()", "dao.getByCategory(category)", "dao.getById(id)", "dao.insert(note)", "dao.update(note)", "dao.deleteById(id)"], "search-terms": ["NoteRepository", "Android Kotlin repository", "NoteDao", "LiveData", "note CRUD operations", "notes filtering", "suspend functions", "Repository pattern"], "state": 2, "file_id": 8, "knowledge_revision": 18, "git_revision": "", "hash": "1c8b5aa2dcd04141260d2e95ef13e0c3", "format-version": 4, "code-base-name": "android_frontend", "filename": "android_frontend/app/src/main/kotlin/org/example/app/data/NoteRepository.kt", "revision_history": [{"18": ""}]}